# same as loader1.yaml, except that we use a jinja template to
# pass some parameters, like here
# - {{gateway}}
# - {{leader}}
# - {{verbose}} a bool
# - {{nodes}} a dict like {'amf': 'fit01', 'gnb': 'fit02'}

nodes:
  - id: faraday
    hostname: {{gateway}}
    formatter: TimeColonFormatter
    verbose: {{verbose}}
  - id: leader
    hostname: {{leader}}
    gateway: faraday
    username: r2lab
    formatter: TimeColonFormatter
    verbose: {{verbose}}
  {% for function, hostname in nodes.items() %}
  - id: {{function}}
    hostname: {{hostname}}
    gateway: faraday
    username: root
    formatter: TimeColonFormatter
    verbose: {{verbose}}
  {% endfor %}

jobs:
  - id: load_images
    node: faraday
    critical: True
    verbose: {{verbose}}
    label: load image kubernetes on FIT worker nodes
    commands:
      - type: Run
        command: rhubarbe load {{ nodes.values() | join(' ') }} -i kubernetes
      - type: Run
        command: rhubarbe wait {{ nodes.values() | join(' ') }}

  {% for function, hostname in nodes.items() %}
  - id: leave_join_{{function}}
    required: load_images
    node: {{function}}
    critical: False
    verbose: {{verbose}}
    label: >
      Reset data interface, ipip tunnels of worker node {{hostname}} and possibly leave {leader} k8s cluster
    commands:
      - type: Run
        command: nmcli con down data; nmcli dev status; leave-tunnel
      - type: Run
        command: kube-install.sh leave-cluster
      - type: Run
        command: sleep 60
      - type: Run
        command: nmcli con up data; nmcli dev status; join-tunnel
      - type: Run
        command: kube-install.sh join-cluster r2lab@{{leader}}
  {% endfor %}

  - id: init_demo
    required:
      {% for function in nodes.keys() %}
      - leave_join_{{function}}
      {% endfor %}
    node: amf
    critical: True
    verbose: {{verbose}}
    label: >
      Clone oai-cn5g-fed, apply patches
      and run the k8s demo-oai script from {{nodes.amf}}
    commands:
      - type: Run
        command: >
          rm -rf oai-cn5g-fed;
          git clone -b master https://gitlab.eurecom.fr/oai/cn5g/oai-cn5g-fed
      - type: RunScript
        command: config-oai5g-sopnode.sh {{ nodes.values() | join(' ')}}
      - type: RunScript
        command: demo-oai.sh init

  - id: start_demo
    required: init_demo
    node: amf
    critical: True
    verbose: {{verbose}}
    label: >
      Launch OAI5G pods by calling demo-oai.sh start from {{nodes.amf}}
    commands:
      - type: RunScript
        command: demo-oai.sh start {{namespace}} {{nodes.values() | join (' ')}}

  - id: stop_demo
    required: start_demo
    node: amf
    critical: True
    verbose: {{verbose}}
    label: >
      Launch OAI5G pods by calling demo-oai.sh start from {{nodes.amf}}
    commands:
      - type: RunScript
        command: demo-oai.sh stop {{namespace}}

  - id: cleanup1
    required: stop_demo
    node: leader
    critical: False
    verbose: {{verbose}}
    label: Drain and delete FIT nodes from the k8s {{leader}} cluster
    commands:
      - type: Run
        command: fit-drain-nodes; fit-delete-nodes

  - id: cleanup2
    required: stop_demo
    node: faraday
    critical: False
    verbose: {{verbose}}
    commands:
      - type: Run
        command: rhubarbe off fit01 fit02
